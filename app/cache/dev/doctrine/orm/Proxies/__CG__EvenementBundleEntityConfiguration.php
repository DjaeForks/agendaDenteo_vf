<?php

namespace Proxies\__CG__\EvenementBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Configuration extends \EvenementBundle\Entity\Configuration implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'id', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'dateDeb', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'dateFin', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'creneau', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'firstDay', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'weeksNumber', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'daysSelected', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'lang'];
        }

        return ['__isInitialized__', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'id', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'dateDeb', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'dateFin', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'creneau', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'firstDay', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'weeksNumber', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'daysSelected', '' . "\0" . 'EvenementBundle\\Entity\\Configuration' . "\0" . 'lang'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Configuration $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDeb($dateDeb)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDeb', [$dateDeb]);

        return parent::setDateDeb($dateDeb);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDeb()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDeb', []);

        return parent::getDateDeb();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFin($dateFin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFin', [$dateFin]);

        return parent::setDateFin($dateFin);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFin', []);

        return parent::getDateFin();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreneau($creneau)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreneau', [$creneau]);

        return parent::setCreneau($creneau);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreneau()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreneau', []);

        return parent::getCreneau();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstDay($firstDay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstDay', [$firstDay]);

        return parent::setFirstDay($firstDay);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstDay', []);

        return parent::getFirstDay();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeeksNumber($weeksNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeeksNumber', [$weeksNumber]);

        return parent::setWeeksNumber($weeksNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeeksNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeeksNumber', []);

        return parent::getWeeksNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setDaysSelected($daysSelected)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDaysSelected', [$daysSelected]);

        return parent::setDaysSelected($daysSelected);
    }

    /**
     * {@inheritDoc}
     */
    public function getDaysSelected()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDaysSelected', []);

        return parent::getDaysSelected();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setLang($lang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLang', [$lang]);

        return parent::setLang($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLang', []);

        return parent::getLang();
    }

}
